name: Amethyst

on:
  push:
    branches: ["master"]
    paths:
      - Amethyst/**
      - Geode/**
      - Datapack.Net/**
      - .github/workflows/amethyst.yml

jobs:
  build:
    runs-on: ${{ matrix.type.os }}

    strategy:
      matrix:
        type: [
          {os: ubuntu-latest, name: linux},
          {os: ubuntu-24.04-arm, name: linux-arm},
          {os: windows-latest, name: windows},
          {os: windows-11-arm, name: windows-arm},
          {os: macos-latest, name: "mac"}
        ]
      fail-fast: false

    steps:
    - uses: actions/checkout@v5

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 10.0.x

    - name: Setup Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.13'

    - name: Setup Java
      uses: actions/setup-java@v5
      with:
        distribution: 'zulu'
        java-version: '21'

    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Datapack.Net Test
      run: dotnet test --no-build --verbosity normal
      
    - name: Publish
      working-directory: ./Amethyst
      run: dotnet publish --configuration Release --output dist
    
    - name: Build Linux Packages
      if: ${{ runner.os == 'Linux' }}
      run: |
            sudo gem install fpm && \
            sudo apt-get install -y libarchive-tools && \
            python -u scripts/linux_package.py

    - name: Test
      uses: nick-fields/retry@v3
      with:
        max_attempts: 3
        timeout_minutes: 10
        command: python -u scripts/test_mc.py

    - name: Upload Build
      uses: actions/upload-artifact@v4
      with:
        name: amethyst-${{ matrix.type.name }}
        path: |
          Amethyst/dist/
          !**/*.pdb
          !**/*.dbg
          !**/tests/**/*.ame
    
    - name: Upload Linux Packages
      uses: actions/upload-artifact@v4
      if: ${{ runner.os == 'Linux' }}
      with:
        name: amethyst-${{ matrix.type.name }}-pkgs
        path: |
          *.deb
          *.pkg.tar.zst
          *.apk
  
  linux-pkgs:
    runs-on: ${{ matrix.arch.runner }}
    needs: [build]
    
    strategy:
      matrix:
        arch: [
          { runner: "ubuntu-latest", artifact: "amethyst-linux-pkgs", img: "ubuntu", cmd: "apt-get update && apt-get install -y ./mnt/*.deb" },
          { runner: "ubuntu-latest", artifact: "amethyst-linux-pkgs", img: "archlinux", cmd: "pacman -Sy && pacman -U ./mnt/*.pkg.tar.zst" },
          { runner: "ubuntu-24.04-arm", artifact: "amethyst-linux-arm-pkgs", img: "--platform=linux/arm64 arm64v8/ubuntu", cmd: "apt-get update && apt-get install -y ./mnt/*.deb" },
          { runner: "ubuntu-24.04-arm", artifact: "amethyst-linux-arm-pkgs", img: "--platform=linux/arm64 ogarcia/archlinux", cmd: "pacman -Sy && pacman -U ./mnt/*.pkg.tar.zst" }
        ]
      fail-fast: false

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.arch.artifact }}
          path: ./pkgs
      
      - name: Run Container
        run: docker run --rm -v "./pkgs:/mnt" ${{ matrix.arch.img }} /bin/sh -c "${{ matrix.arch.cmd }} && amethyst --help"
